version: "3.9"

services:
  db:
    image: postgres:alpine3.17
    container_name: db_prod
    env_file:
      - .env
    volumes:
      - .:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: on-failure
  backend:
    build:
      context: .
      dockerfile: docker/back.Dockerfile
    container_name: backend_prod
    env_file:
      - .env
    environment:
      POSTGRES_HOST: db_prod
      TOKEN: ${TOKEN_PROD}
    volumes:
      - ./src:/app/src
    depends_on:
      - db
    restart: on-failure
    entrypoint: poetry run python3 -m src
  bot:
    build:
      context: .
      dockerfile: docker/bot.Dockerfile
    container_name: bot_prod
    env_file:
      - .env
    environment:
      TOKEN: ${TOKEN_PROD}
      BACKEND: backend_prod
    volumes:
      - ./bot:/app/bot
    depends_on:
      - db
    restart: on-failure
    entrypoint: poetry run python3 -m bot